#!/bin/bash

#Function for handling association between LEDs and Events
sysEvent(){
echo
echo "Associate LED With A System Event"
echo "================================="
echo "Available Events Are: "
echo "---------------------"
#Lists triggers
select ledEvent in $(cat /sys/class/leds/$ledChoice/trigger) Quit
do
  for i in $(cat /sys/class/leds/$ledChoice/trigger)
  do
    if [[ $ledEvent = $i ]]
    then
      echo $ledEvent > /sys/class/leds/$ledChoice/trigger
      echo "$ledEvent active"
      selectLed
      break
    fi
  done
  break
  if [[ $ledEvent == "Quit" ]]
  then
    selectLed
    break
  fi
done
}

selectLed(){
echo
echo "Modify the led $ledChoice"
ledDone=false
while [ $ledDone = false ]
  do
  echo "1: Turn on LED"
  echo "2: Turn off LED"
  echo "3: Associate LED With System Event"
  #Don't have time to implement task 6 but I'll chuck some code in
  #echo "4. Associate LED With A Process/Performance"
  echo "4: Quit"
  read ledMod
  #Acts depending on decision
  if [[ $ledMod == 1 ]]
  then
    echo 1 > /sys/class/leds/$ledChoice/brightness
  elif [[ $ledMod == 2 ]]
  then
    echo 0 > /sys/class/leds/$ledChoice/brightness
  elif [[ $ledMod == 3 ]]
  then
    sysEvent
    break
  #elif [[ $ledMod == 4 ]]
  #then
  #processAssoc
  #break
  elif [[ $ledMod == 4 ]] 
  then
    mainMenu
    ledDone=true
    break
  fi
  done
}
#processAssoc(){
# This is where task 6 would be
# Something to do with using ps to get processes and then picking one, altering LED brightness
# either going through ps -aupi and piping it into a search or using ps -C

mainMenu(){
echo
echo "Welcome to the LED Configurator"
echo "================================="
PS3="Enter a selection: "
#
select ledChoice in $(ls /sys/class/leds) Quit
do 
  for i in $(ls /sys/class/leds)
    do
    if [[ $ledChoice = $i ]]
    then
      selectLed
      break
    fi
    done
  if [[ $ledChoice == "Quit" ]]
  then
    break
  fi
done
echo "$ledChoice has been selected"
}
mainMenu
